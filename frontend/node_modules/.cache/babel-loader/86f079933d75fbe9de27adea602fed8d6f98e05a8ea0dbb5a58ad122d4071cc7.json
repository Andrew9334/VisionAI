{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\VisionAIPython\\\\frontend\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, TextField, Typography, Container, Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://127.0.0.1:5000\";\nconst LoginPage = ({\n  setToken\n}) => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleAuth = async () => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/${isLogin ? \"login\" : \"register\"}`, {\n        username,\n        password\n      });\n      if (isLogin) {\n        localStorage.setItem(\"token\", response.data.token);\n        setToken(response.data.token);\n        navigate(\"/app\");\n      }\n      setMessage(response.data.message);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Ошибка\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      boxShadow: 3,\n      borderRadius: 2,\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isLogin ? \"Вход\" : \"Регистрация\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n        fullWidth: true,\n        margin: \"normal\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        type: \"password\",\n        fullWidth: true,\n        margin: \"normal\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        fullWidth: true,\n        onClick: handleAuth,\n        children: isLogin ? \"Войти\" : \"Зарегистрироваться\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        onClick: () => setIsLogin(!isLogin),\n        style: {\n          cursor: \"pointer\",\n          marginTop: \"10px\"\n        },\n        children: isLogin ? \"Нет аккаунта? Зарегистрироваться\" : \"Уже есть аккаунт? Войти\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"i3ibKa5Nfj2qGFud0o/QhxZHsY4=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","axios","useNavigate","Button","TextField","Typography","Container","Box","jsxDEV","_jsxDEV","API_URL","LoginPage","setToken","_s","isLogin","setIsLogin","username","setUsername","password","setPassword","message","setMessage","navigate","handleAuth","response","post","localStorage","setItem","data","token","error","_error$response","_error$response$data","maxWidth","children","p","boxShadow","borderRadius","textAlign","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","margin","value","onChange","e","target","type","color","onClick","style","cursor","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/VisionAIPython/frontend/src/components/LoginPage.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button, TextField, Typography, Container, Box } from \"@mui/material\";\r\n\r\nconst API_URL = \"http://127.0.0.1:5000\";\r\n\r\nconst LoginPage = ({ setToken }) => {\r\n    const [isLogin, setIsLogin] = useState(true);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    const handleAuth = async () => {\r\n        try {\r\n            const response = await axios.post(`${API_URL}/auth/${isLogin ? \"login\" : \"register\"}`, {\r\n                username,\r\n                password,\r\n            });\r\n            if (isLogin) {\r\n                localStorage.setItem(\"token\", response.data.token);\r\n                setToken(response.data.token);\r\n                navigate(\"/app\");\r\n            }\r\n            setMessage(response.data.message);\r\n        } catch (error) {\r\n            setMessage(error.response?.data?.error || \"Ошибка\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"xs\">\r\n            <Box p={3} boxShadow={3} borderRadius={2} textAlign=\"center\">\r\n                <Typography variant=\"h5\">{isLogin ? \"Вход\" : \"Регистрация\"}</Typography>\r\n                <TextField label=\"Имя пользователя\" fullWidth margin=\"normal\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n                <TextField label=\"Пароль\" type=\"password\" fullWidth margin=\"normal\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleAuth}>{isLogin ? \"Войти\" : \"Зарегистрироваться\"}</Button>\r\n                <Typography variant=\"body2\" onClick={() => setIsLogin(!isLogin)} style={{ cursor: \"pointer\", marginTop: \"10px\" }}>\r\n                    {isLogin ? \"Нет аккаунта? Зарегистрироваться\" : \"Уже есть аккаунт? Войти\"}\r\n                </Typography>\r\n                {message && <Typography color=\"error\">{message}</Typography>}\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}