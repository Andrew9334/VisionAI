from flask import Blueprint, request, jsonify
from flask_cors import CORS
from flask_jwt_extended import create_access_token, jwt_required, get_jwt_identity
from werkzeug.security import generate_password_hash, check_password_hash

# üìå –°–æ–∑–¥–∞—ë–º Blueprint (–º–æ–¥—É–ª—å) –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
auth_bp = Blueprint("auth", __name__)
CORS(auth_bp, resources={r"/*": {"origins": "http://localhost:3000"}}, supports_credentials=True)

# üìå –§–µ–π–∫–æ–≤–∞—è –±–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏)
fake_users = {}

# üìå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@auth_bp.route("/register", methods=["POST"])
def register():
    data = request.json
    username = data.get("username")
    password = data.get("password")

    if not username or not password:
        return jsonify({"error": "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã"}), 400

    if username in fake_users:
        return jsonify({"error": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"}), 400

    fake_users[username] = generate_password_hash(password)  # –•—Ä–∞–Ω–∏–º —Ö–µ—à –ø–∞—Ä–æ–ª—è
    return jsonify({"message": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!"}), 201

# üìå –í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è)
@auth_bp.route("/login", methods=["POST"])
def login():
    data = request.json
    username = data.get("username")
    password = data.get("password")

    if username not in fake_users or not check_password_hash(fake_users[username], password):
        return jsonify({"error": "–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"}), 401

    access_token = create_access_token(identity=username)
    return jsonify({"token": access_token, "message": "–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥"}), 200

# üìå –ó–∞—â–∏—â—ë–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç (–Ω—É–∂–µ–Ω —Ç–æ–∫–µ–Ω)
@auth_bp.route("/protected", methods=["GET"])
@jwt_required()
def protected():
    username = get_jwt_identity()
    return jsonify({"message": f"–ü—Ä–∏–≤–µ—Ç, {username}! –≠—Ç–æ –∑–∞—â–∏—â—ë–Ω–Ω—ã–π API."})
